"" Source your .vimrc
"source ~/.vimrc

set clipboard+=unnamed
set clipboard+=ideaput
set hlsearch
set scrolloff=5
set showmode
set history=1000
set surround
set smartcase
set number
set relativenumber
set incsearch
set keep-english-in-normal
set keymodel^=startsel
set commentary
set ReplaceWithRegister
set argtextobj
set textobj-entire
set highlightedyank
set exchange
set NERDTree
set idearefactormode=keep
set ideajoin=true

let g:NERDTreeMapActivateMode='l'
let g:NERDTreeMapJumpParent='h'

" Highlightedyank settings
let g:highlightedyank_highlight_duration = "200"

" Extends argtextobj
let g:argtextobj_pairs="(:),{:},<:>"

" actions
nnoremap <space>q :action CloseContent<cr>
vnoremap <space>q :action CloseContent<cr>
nnoremap <space>c :action CloseAllUnpinnedEditors<cr>
nnoremap <space>C :action CloseAllEditorsButActive<cr>
nnoremap <space>Q :action ReopenClosedTab<cr>
nnoremap <space>\ :action VimFilePrevious<cr>
nnoremap <space>e :action SearchEverywhere<cr>
nnoremap <space>E :action ShowErrorDescription<cr>
nnoremap <space>a :action GotoAction<cr>
nnoremap <space>b :action ToggleLineBreakpoint<cr>
nnoremap <space>w :action SaveAll<cr>

" Reformat code style
nnoremap \r :action ReformatCode<CR>

" Open recently closed files list window
nmap <space>. :action RecentFiles<cr>

nnoremap <c-k> :action MoveLineUp<cr>
nnoremap <c-j> :action MoveLineDown<cr>


" project panel
nnoremap <space>k :action FileStructurePopup<cr>
nnoremap <space>o :action OpenFile<cr>

" Opent file tree
"nnoremap <space>t :action ActivateProjectToolWindow<cr>

" Fold and unfold
nnoremap <space><space>f zMzo<cr>
nnoremap <space><space>r zR<cr>

" KJump hot key
nmap <space>; :action KJumpAction.Word0<cr>
nmap <space>l :action KJumpAction.Line<cr>
nmap <space>f :action KJumpAction<cr>

" These create newlines like o and O but stay in normal mode
nmap zj o<Esc>k
nmap zk O<Esc>j

" These delete line upper and below but stay in normal mode
nmap zK kddj
nmap zJ jddk

" Comment line and block
nmap cml :action CommentByLineComment<cr>
nmap cmb O<Esc>:action CommentByBlockComment<cr>

nmap cld :action CollapseDocComments<cr>
nmap clD :action ExpandDocComments<cr>

" Highlight search word under cursor without jumping to next
nnoremap <space>h *<C-O>

" Quickly switch to last buffer
nnoremap <space>, :e#<CR>

" Search ections
"nmap <space>n :action ActivateProjectToolWindow<cr>
nnoremap <space>n :action GotoClass<cr>
nnoremap <space>t :action GotoFile<cr>
nnoremap <space>F :action FindInPath<cr>


" unimparied mapping nnoremap <space>md :action MethodDown<cr> 
" easy window navigation
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-h> <c-w>h
nnoremap <c-k> <c-w>k
nnoremap <a-h> gT
nnoremap <a-l> gt

nnoremap <A-k> :m-2<CR>
nnoremap <A-j> :m+1<CR>

inoremap <A-Up> <C-O>:action EditorUpWithSelection<CR>
inoremap <A-Down> <C-O>:action EditorDownWithSelection<CR>

" Source ~/.ideavimrc
nnoremap <space>V :source ~/.ideavimrc<cr>

" Git
nnoremap <space>gs :Gist<cr>

" clear the search buffer when hitting return
nnoremap <space>S :noh<cr>

" options
nnoremap cow :action EditorToggleUseSoftWraps<cr>
nnoremap col :action EditorToggleShowWhitespaces<cr>

" actions
nnoremap <space>q :action CloseContent<cr>
nnoremap <space>Q :action ReopenClosedTab<cr>
nnoremap <space>\ :action VimFilePrevious<cr>
nnoremap <space>e :action SearchEverywhere<cr>
nnoremap <space>E :action Switcher<cr>
nnoremap <space>T :action GotoSymbol<cr>
nnoremap <space>a :action GotoAction<cr>
nnoremap <space>b :action ToggleLineBreakpoint<cr>

" code navigation
nnoremap <space>] :action GotoImplementation<cr>
nnoremap <space>[ :action GotoSuperMethod<cr>
nnoremap <space>u :action FindUsages<cr>
nnoremap <space>gt :action GotoTest<cr>
nnoremap <space>k :action HighlightUsagesInFile<cr>
nnoremap \r :action RunClass<cr>
nnoremap \R :action Run<cr>
nnoremap \d :action DebugClass<cr>
nnoremap \D :action Debug<cr>
nnoremap \c :action CheckStyleCurrentFileAction<cr>

" Xdebug
" Map \r to the Reformat Code action
:map \r :action ReformatCode<cr>
" Map \d to start debug
:map \d :action Debug<cr>

" Map \b to toggle the breakpoint on the current line
:map \b :action ToggleLineBreakpoint<cr>

" Optimize use class imports
:map \i :action OptimizeImports<cr>

" code refactoring
nnoremap <space>rr :action RenameElement<cr>

" unimpaired mappings
nnoremap [<space> O<esc>j
nnoremap ]<space> o<esc>k
nnoremap [q :action PreviousOccurence<cr>
nnoremap ]q :action NextOccurence<cr>
nnoremap [m :action MethodUp<cr>
nnoremap ]m :action MethodDown<cr>
nnoremap [c :action VcsShowPrevChangeMarker<cr>
nnoremap ]c :action VcsShowNextChangeMarker<cr>

" but preserve ideavim defaults
nnoremap g<c-o> <c-o>
nnoremap g<c-i> <c-i>

" built in search looks better
nnoremap / :action Find<cr>
" but preserve ideavim search
nnoremap g/ /

cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <A-d> :action EditorPageDown<cr>

" emulate commands combinations ci' and di' using cq and dq.
onoremap q i'
onoremap Q i"

onoremap q i'
onoremap Q i"
